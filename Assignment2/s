package assignment2;

public class Person {
	private String firstName;
	private String lastName;
	private double weight;
	private int age;
	private String SSN;
	private String gender;
	

	public Person(String firstName, String lastName, double weight, int age, String SSN, String gender) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.weight = weight;
		this.age = age;
		this.SSN = SSN;
		this.gender = gender;
	}
	
	String getFirstName() {
		return firstName;
	}
	void setFirstName(String firstName) {
		this.firstName = firstName; 
	}
	String getLastName() {
		return lastName;
	}
	void setLastName(String lastName) {
		this.lastName = lastName;
	}
	double getWeight() { 
		return weight;
	}
	void setWeight(double weight) {
		this.weight = weight;
	}
	int getAge() {
		return age;
	}
	void setAge(int age) {
		this.age = age;
	}
	String getSSN() {
		return SSN;
	}
	void setSSN(String SSN) {
		this.SSN = SSN;
	}
	String getGender() {
		return gender;
	}
	void setGender(String gender) {
		this.gender = gender;
	}
	public String toString() {
		return (firstName + " " + getLastName() +
		"\nWeight: " + getWeight() +
		"\nSSN: " + getSSN() +
		"\nGender: "+ getGender());
	}
	void introduce() {
		System.out.println(this.toString());
	}
}

package assignment2;

public final class Product {
	final String name;
	final String description;
	final double price;
	final int maximumQuanity;
	Product(String name, String description, double price, int maximumQuanity){
		this.name = name;
		this.description = description;
		this.price = price;
		this.maximumQuanity = maximumQuanity;
	}
	String getName() {
		return name;
	}
	String getDescription() {
		return description;
	}
	double getPrice() {
		return price;
	}
	int getMaximumQuanity() {
		return maximumQuanity;
	}
	public String toString() {
		return("Product name: "+ getName()
				+ "\nProduct description: " + getDescription()
				+ "\nPrice: $"+ getPrice()
				+ "\nMaximum quanity allowed to be ordered: "+ getMaximumQuanity());
	}
}

package assignment2;

public class ProductTest {

	public static void main(String[] args) {
		Product product = new Product("potato", "vegetable", 5.50, 10);
		System.out.println(product.toString()); 

	}

}

package assignment2;

public class Racoon extends Animal {
	private double speed;
	private String habitat;
	Racoon(String type, String name, String gender){
		super(type, name, gender);
		this.speed = 10;
		this.habitat = "forest";
	}
	double getSpeed() {
		return speed;
	}
	void setSpeed(double speed) {
		this.speed = speed; 
	}
	String getHabitat() {
		return habitat;
	}
	void setHabitat(String habitat) {
		this.habitat = habitat;
	}
	void sound() {
		System.out.println("Meeeeeeeew");
	}
	void move() {
		System.out.println("Moving at " + speed + "km/hr");
	}
	void scratch() {
		System.out.println("Scratching");
	}
}

# Assignment2
Assignment2 repo

package assignment2;

public class Student {
	private String firstName;
	private String lastName;
	private double gpa;
	private int age;
	private String major;
	private String department;
	
	public Student(String firstName, String lastName, double gpa, int age, String major, String department) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.gpa = gpa;
		this.age = age;
		this.major = major;
		this.department = department;
	}
	
	String getFirstName() {
		return firstName;
	}
	void setFirstName(String firstName) {
		this.firstName = firstName; 
	}
	String getLastName() {
		return lastName;
	}
	void setLastName(String lastName) {
		this.lastName = lastName;
	}
	double getGPA() { 
		return gpa;
	}
	void setGPA(double gpa) {
		this.gpa = gpa;
	}
	int getAge() {
		return age;
	}
	void setAge(int age) {
		this.age = age;
	}
	String getMajor() {
		return major;
	}
	void setMajor(String major) {
		this.major = major;
	}
	String getDepartment() {
		return department;
	}
	void setDepartment(String department) {
		this.department = department;
	}
	class Course{
		void printSchedule() {
			System.out.println("Cs 151, Cs 147, Pols 15, Ling 24");
		}
	}
}

package assignment2;

public class StudentTest {
	public static void main(String[]args) {
		Student student = new Student("John", "Smith", 3.6, 20, "Computer Science", "School of Computer Science departmen" );
		Student.Course course = student.new Course();
		course.printSchedule();
	}
}

package assignment2;

public class Whale extends Animal {
	private double speed;
	private String habitat;
	Whale(String type, String name, String gender){
		super(type, name, gender);
		this.speed = 100;
		this.habitat = "ocean";
	}
	double getSpeed() {
		return speed;
	}
	void setSpeed(double speed) {
		this.speed = speed; 
	}
	String getHabitat() {
		return habitat;
	}
	void setHabitat(String habitat) {
		this.habitat = habitat;
	}
	void sound() {
		System.out.println("Whiieeeeeaooooooo");
	}
	void move() {
		this.swim();
	}
	void swim() {
		System.out.println("Swimming at " + speed + "km/hr");
	}
}

package assignment2;

public class Animal {
	private String type;
	private String name;
	private String gender;
	Animal (String type, String name, String gender){
		this.type = type;
		this.name = name;
		this.gender = gender;
	}
	String getType() {
		return type;
	}
	void setType(String type) {
		this.type = type;
	}
	String getName() {
		return name;
	}
	void setName(String name) {
		this.name = name;
	}
	String getGender() {
		return gender;
	}
	void setGender(String gender) {
		this.gender = gender;
	}
	void eat() {
		System.out.println("Eating");
	}
	void sleep() {
		System.out.println("Sleeping");
	}
	void move() {
		System.out.println("moving");
	}
	void sound() {
		System.out.println("Making noice");
	}
}

package assignment2;

public class AnimalTest {
	public static void main(String[]args) {
		Dog dog = new Dog("Mammal", "Leo", "male"); 
		Cat cat = new Cat("Mammal", "Tom", "female"); 
		Racoon racoon = new Racoon("Mammal", "Billy", "male"); 
		Whale whale = new Whale("Cetacean", "Biggie", "fmale");
		dog.eat();
		dog.sleep();
		dog.sound();
		dog.move();
		dog.bark();
		dog.walk();
		dog.greetHuman();
		System.out.println();
		cat.eat();
		cat.sleep();
		cat.sound();
		cat.move();
		cat.scratch();
		cat.walk();
		cat.greetHuman();
		System.out.println();
		racoon.eat();
		racoon.sleep();
		racoon.sound();
		racoon.move();
		racoon.scratch();
		System.out.println();
		whale.eat();
		whale.sleep();
		whale.sound();
		whale.move();
		whale.swim();
	}
	
}

package assignment2;

public class Cat extends Animal implements Domesticated {
	private double speed;
	private String habitat;
	Cat(String type, String name, String gender){
		super(type, name, gender);
		this.speed = 20;
		this.habitat = "home";
	}
	double getSpeed() {
		return speed;
	}
	void setSpeed(double speed) {
		this.speed = speed; 
	}
	String getHabitat() {
		return habitat;
	}
	void setHabitat(String habitat) {
		this.habitat = habitat;
	}
	void sound() {
		System.out.println("Meow");
	}
	void move() {
		System.out.println("Moving at " + speed + "km/hr");
	}
	void scratch() {
		System.out.println("Scratching");
	}
	public void walk() {
		System.out.println("Walking");
	}
	public void greetHuman() {
		System.out.println("Greeting human");
	}
}

package assignment2;

public class Dog extends Animal implements Domesticated {
	private double speed;
	private String habitat;
	Dog(String type, String name, String gender){
		super(type, name, gender);
		this.speed = 15;
		this.habitat = "home";
	}
	double getSpeed() {
		return speed;
	}
	void setSpeed(double speed) {
		this.speed = speed; 
	}
	String getHabitat() {
		return habitat;
	}
	void setHabitat(String habitat) {
		this.habitat = habitat;
	}
	void sound() {
		this.bark();
	}
	void move() {
		System.out.println("Moving at " + speed + "km/hr");
	}
	void bark() {
		System.out.println("Woof");
	}
	public void walk() {
		System.out.println("Walking");
	}
	public void greetHuman() {
		System.out.println("Greeting human");
	}
}

package assignment2;

public interface Domesticated {
	void walk();
	void greetHuman();
}

package assignment2;

public class Employee extends Person{
	private String id;
	private String status;
	private String startDate;
	private double hourlyPay;
	private double yearlySalary;
	public Employee(String firstName, String lastName, double weight, int age, String SSN, String gender,
					String id, String status,String startDate, double pay) {
		super(firstName, lastName, weight, age, SSN, gender);
		this.id = id;
		this.status = status;
		this.startDate = startDate;
		if(status.equals("full time"))
			this.yearlySalary = pay;
		else
			this.hourlyPay = pay;
	}
	String getId() {
		return id;
	}
	void setId(String id) {
		this.id = id; 
	}
	String getStatus() {
		return status;
	}
	void setStatus(String status) {
		this.status = status;
	}
	String getStartDate() {
		return startDate;
	}
	void setStartDate(String startDate) {
		this.startDate = startDate;
	}
	double getHourlyPay() {
		return hourlyPay;
	}
	void setHourlyPay(double hourlyPay) {
		this.hourlyPay = hourlyPay;
	}
	double getYearlySalary() {
		return yearlySalary;
	}
	void setYearlySalary(double yearlySalary) {
		this.yearlySalary = yearlySalary;
	}
	void introduce() {
		System.out.println("ID: " + getId());
		System.out.println("Status: "+ getStatus());
		System.out.println("Start date: "+ getStartDate());
		if(getStatus().equals("full time"))
			System.out.println("Yearly salary: "+ getYearlySalary());
		else
			System.out.println("Hourly pay: "+ getHourlyPay());
	}
	void display() {
		super.introduce();
		this.introduce();
	}
	void calculatePay(double time) {
		System.out.println(getFirstName()+" "+ getLastName()+", " + getStatus());
		if(getStatus().equals("full time"))
			System.out.print("Pay is $"+ getYearlySalary() +"/yr , should get paid for working " + time +" week");
		else
			System.out.print("Pay is $"+ getHourlyPay() +"/hr , should get paid for working " + time +" hours");
		System.out.println();
	}
	
	
}

package assignment2;

public class EmployeeTest {
	public static void main(String[]args) {
		Employee employee = new Employee("John", "Nguyen", 135, 20, "1000000", "male",
										"10101011", "part time", "11/15/2010", 65.5);		
		employee.display();
		employee.calculatePay(60);
	}
}

int is a prmitive type that use to store binary value of a integer, therefore it has less flexibility
While Integer is a wrapper class for int data type, it give us more flexibility by allowing us to convert and manipulate int data
Also since Integer is a class, it can call various built-in methods
